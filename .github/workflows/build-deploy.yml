name: Build and Test Code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: cicd

    env:
      DATABASE_HOST: ${{secrets.DATABASE_HOST}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USER: ${{secrets.DATABASE_USER}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}

      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

      TEST_DATABASE_HOST: ${{secrets.TEST_DATABASE_HOST}}
      TEST_DATABASE_PORT: ${{secrets.TEST_DATABASE_PORT}}
      TEST_DATABASE_NAME: ${{secrets.TEST_DATABASE_NAME}}
      TEST_DATABASE_USER: ${{secrets.TEST_DATABASE_USER}}
      TEST_DATABASE_PASSWORD: ${{secrets.TEST_DATABASE_PASSWORD}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.TEST_DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.TEST_DATABASE_NAME}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    runs-on: ubuntu-latest

    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: say hi
        run: echo "hi"

      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: check python version
        run: python --version

      - name: update pip
        run: python -m pip install --upgrade pip

      - name: install packages
        run: pip install -r requirements.txt

      - name: run tests
        run: |
          pip install pytest
          python -m pytest -s -x --disable-warnings tests

      # add docker steps
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set env variable for short commit hash
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            whoopinstick/kodekloud_fastapi:${{ env.SHORT_SHA }}
            whoopinstick/kodekloud_fastapi:latest
